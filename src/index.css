@import url('https://fonts.googleapis.com/css2?family=Anton&family=Inter:wght@300;400;500;600;700&family=Montserrat:wght@300;400;500;600;700;800&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 0%;

    --card: 0 0% 100%;
    --card-foreground: 0 0% 0%;

    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 0%;

    --primary: 0 0% 0%;
    --primary-foreground: 0 0% 100%;

    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 0%;

    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.9%;

    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 0%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 0%;

    --radius: 0rem;
  }
  
  .dark {
    --background: 0 0% 0%;
    --foreground: 0 0% 100%;
    
    --card: 0 0% 0%;
    --card-foreground: 0 0% 100%;
    
    --popover: 0 0% 0%;
    --popover-foreground: 0 0% 100%;
    
    --primary: 0 0% 100%;
    --primary-foreground: 0 0% 0%;
    
    --secondary: 0 0% 15%;
    --secondary-foreground: 0 0% 100%;
    
    --muted: 0 0% 15%;
    --muted-foreground: 0 0% 65%;
    
    --accent: 0 0% 15%;
    --accent-foreground: 0 0% 100%;
    
    --border: 0 0% 20%;
    --input: 0 0% 20%;
    --ring: 0 0% 100%;
  }
  
  .horizontal-scroll-page {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 12h14"></path><path d="m12 5 7 7-7 7"></path></svg>'), auto;
    scrollbar-width: none; /* Firefox */
  }
  
  .horizontal-scroll-page::-webkit-scrollbar {
    display: none; /* Chrome, Safari and Opera */
  }
  
  .horizontal-scroll-page:active {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 12h14"></path><path d="m12 5 7 7-7 7"></path></svg>'), grabbing;
  }
  
  /* Custom scrollbar for when horizontal scrollbar is visible */
  .horizontal-scroll-container::-webkit-scrollbar {
    height: 3px;
  }

  .horizontal-scroll-container::-webkit-scrollbar-track {
    background: #f1f1f1;
  }

  .horizontal-scroll-container::-webkit-scrollbar-thumb {
    background: #888;
  }

  .horizontal-scroll-container::-webkit-scrollbar-thumb:hover {
    background: #555;
  }

  /* Enhanced text selection */
  ::selection {
    background: black;
    color: white;
    text-shadow: 1px 1px 3px rgba(255,255,255,0.3);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-body selection:bg-black selection:text-white;
  }

  h1, h2, h3, h4 {
    @apply font-display tracking-normal;
  }

  h5, h6 {
    @apply font-sans font-bold;
  }
}

@layer components {
  .btn-primary {
    @apply bg-black text-white hover:bg-zinc-800 transition-colors;
  }
  
  .btn-secondary {
    @apply bg-zinc-200 text-black hover:bg-zinc-300 transition-colors;
  }

  .nav-link {
    @apply relative font-medium text-inherit hover:text-black transition-colors;
  }
  
  /* Deconstructed link effects */
  .nav-link::after {
    content: '';
    @apply absolute left-0 bottom-0 w-0 h-px bg-current transition-all duration-300;
  }
  
  .nav-link:hover::after {
    @apply w-full;
  }

  .product-grid {
    @apply grid grid-cols-2 md:grid-cols-4 gap-6;
  }

  .section-padding {
    @apply py-16 md:py-24;
  }

  .container-custom {
    @apply max-w-7xl mx-auto px-4 sm:px-6 lg:px-8;
  }
  
  /* Glitch effects */
  .glitch {
    position: relative;
    animation: noise-movement 2s infinite linear alternate-reverse;
  }
  
  @keyframes noise-movement {
    0% { transform: translate(0, 0) skew(0deg); }
    10% { transform: translate(-1px, 1px) skew(0.5deg); }
    20% { transform: translate(-2px, 0) skew(0deg); }
    30% { transform: translate(1px, 2px) skew(-0.5deg); }
    40% { transform: translate(0, -1px) skew(0.25deg); }
    50% { transform: translate(-1px, 2px) skew(-0.25deg); }
    60% { transform: translate(-2px, 1px) skew(0deg); }
    70% { transform: translate(2px, 1px) skew(0.5deg); }
    80% { transform: translate(-3px, -2px) skew(0.25deg); }
    90% { transform: translate(2px, -1px) skew(-0.5deg); }
    100% { transform: translate(0, 0) skew(0deg); }
  }
  
  .glitch::before,
  .glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  
  .glitch::before {
    left: 2px;
    text-shadow: -1px 0 red;
    clip: rect(24px, 550px, 90px, 0);
    animation: glitch-anim-2 3s infinite linear alternate-reverse;
  }
  
  .glitch::after {
    left: -2px;
    text-shadow: -1px 0 blue;
    clip: rect(85px, 550px, 140px, 0);
    animation: glitch-anim 2.5s infinite linear alternate-reverse;
  }
  
  @keyframes glitch-anim {
    0% {
      clip: rect(51px, 9999px, 28px, 0);
    }
    5% {
      clip: rect(26px, 9999px, 44px, 0);
    }
    10% {
      clip: rect(58px, 9999px, 63px, 0);
    }
    15% {
      clip: rect(34px, 9999px, 59px, 0);
    }
    20% {
      clip: rect(45px, 9999px, 71px, 0);
    }
    25% {
      clip: rect(8px, 9999px, 86px, 0);
    }
    30% {
      clip: rect(63px, 9999px, 89px, 0);
    }
    35% {
      clip: rect(76px, 9999px, 91px, 0);
    }
    40% {
      clip: rect(37px, 9999px, 9px, 0);
    }
    45% {
      clip: rect(82px, 9999px, 29px, 0);
    }
    50% {
      clip: rect(93px, 9999px, 10px, 0);
    }
    55% {
      clip: rect(49px, 9999px, 69px, 0);
    }
    60% {
      clip: rect(9px, 9999px, 86px, 0);
    }
    65% {
      clip: rect(20px, 9999px, 78px, 0);
    }
    70% {
      clip: rect(71px, 9999px, 1px, 0);
    }
    75% {
      clip: rect(37px, 9999px, 94px, 0);
    }
    80% {
      clip: rect(38px, 9999px, 92px, 0);
    }
    85% {
      clip: rect(65px, 9999px, 35px, 0);
    }
    90% {
      clip: rect(79px, 9999px, 70px, 0);
    }
    95% {
      clip: rect(95px, 9999px, 29px, 0);
    }
    100% {
      clip: rect(28px, 9999px, 73px, 0);
    }
  }
  
  @keyframes glitch-anim-2 {
    0% {
      clip: rect(18px, 9999px, 7px, 0);
    }
    5% {
      clip: rect(34px, 9999px, 40px, 0);
    }
    10% {
      clip: rect(20px, 9999px, 59px, 0);
    }
    15% {
      clip: rect(79px, 9999px, 83px, 0);
    }
    20% {
      clip: rect(38px, 9999px, 40px, 0);
    }
    25% {
      clip: rect(75px, 9999px, 49px, 0);
    }
    30% {
      clip: rect(93px, 9999px, 73px, 0);
    }
    35% {
      clip: rect(5px, 9999px, 67px, 0);
    }
    40% {
      clip: rect(52px, 9999px, 70px, 0);
    }
    45% {
      clip: rect(12px, 9999px, 94px, 0);
    }
    50% {
      clip: rect(40px, 9999px, 10px, 0);
    }
    55% {
      clip: rect(59px, 9999px, 71px, 0);
    }
    60% {
      clip: rect(36px, 9999px, 11px, 0);
    }
    65% {
      clip: rect(25px, 9999px, 64px, 0);
    }
    70% {
      clip: rect(66px, 9999px, 97px, 0);
    }
    75% {
      clip: rect(12px, 9999px, 5px, 0);
    }
    80% {
      clip: rect(8px, 9999px, 32px, 0);
    }
    85% {
      clip: rect(7px, 9999px, 12px, 0);
    }
    90% {
      clip: rect(64px, 9999px, 78px, 0);
    }
    95% {
      clip: rect(98px, 9999px, 28px, 0);
    }
    100% {
      clip: rect(67px, 9999px, 23px, 0);
    }
  }
  
  /* Text distortion effect */
  .text-distort {
    display: inline-block;
    transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
  }
  
  .text-distort:hover {
    animation: textDistortEnhanced 0.8s forwards;
  }
  
  @keyframes textDistortEnhanced {
    0% { transform: skew(0deg, 0deg); filter: blur(0); }
    20% { transform: skew(2deg, 1deg) scale(1.05); filter: blur(0.5px); }
    40% { transform: skew(-2deg, -1deg) scale(0.95); filter: blur(0); }
    60% { transform: skew(1deg, 2deg) scale(1.02); filter: blur(1px); }
    80% { transform: skew(-1deg, -2deg) scale(0.98); filter: blur(0.5px); }
    100% { transform: skew(0deg, 0deg); filter: blur(0); }
  }
  
  /* Digital noise effect */
  .digital-noise {
    position: relative;
    overflow: hidden;
  }
  
  .digital-noise::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3CfeColorMatrix type='matrix' values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    pointer-events: none;
    opacity: 0;
    mix-blend-mode: overlay;
    animation: noise-animation 8s steps(10) infinite;
  }
  
  @keyframes noise-animation {
    0%, 100% { opacity: 0; }
    25%, 85% { opacity: 0.05; }
    50%, 75% { opacity: 0.02; }
  }
  
  /* VHS scan line effect */
  .scan-lines {
    position: relative;
    overflow: hidden;
  }
  
  .scan-lines::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
      to bottom,
      transparent 0%,
      rgba(0, 0, 0, 0.05) 0.5%,
      transparent 1%
    );
    pointer-events: none;
    z-index: 10;
  }
  
  .scan-lines::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to bottom,
      transparent 50%,
      rgba(0, 0, 0, 0.1) 51%,
      transparent 52%
    );
    background-size: 100% 4px;
    pointer-events: none;
    animation: scanlines 6s linear infinite;
    z-index: 9;
    opacity: 0.2;
  }
  
  @keyframes scanlines {
    0% { transform: translateY(0); }
    100% { transform: translateY(100%); }
  }
  
  /* Brutal hover effect */
  .brutal-hover {
    @apply relative overflow-hidden;
  }
  
  .brutal-hover::after {
    content: '';
    @apply absolute inset-0 bg-black opacity-0 transition-opacity duration-300;
  }
  
  .brutal-hover:hover::after {
    @apply opacity-10;
  }
}
